#!/usr/bin/env python

import os
import sys
import json
import argparse

from sqlalchemy import create_engine
from meteo.models import cr6, SCHEMAS
from meteo.db.ops import bulk_insert


def parse_args():
    parser = argparse.ArgumentParser(
        description='Load JSON data to BPPTKG meteorology model.')
    parser.add_argument('url', help='SQLAlchemy engine URL.')
    parser.add_argument('schema', help='SQLAlchemy schema name.')
    parser.add_argument('model', help='Schema model class name.')
    parser.add_argument('json', help='Path to json file.')
    return parser.parse_args()


def read_json_file(path):
    with open(path) as f:
        data = json.load(f)
    return data


def main():
    args = parse_args()
    if not os.path.exists(args.json):
        sys.exit('JSON file {} is not exits.'.format(args.json))

    if args.schema not in SCHEMAS:
        sys.exit('Schema name {} is not supported.'.format(args.schema))

    if args.model not in SCHEMAS[args.schema]:
        sys.exit('Model class name {} is not supported.'.format(args.model))

    base_class = SCHEMAS[args.schema]['base']
    engine = create_engine(args.url)
    base_class.prepare(engine, reflect=True)

    json_data = read_json_file(args.json)
    bulk_insert(engine, SCHEMAS[args.schema][args.model], json_data)


if __name__ == '__main__':
    main()
